<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAPdJREFUWEftltEN
        wyAMRJmqgzARK/SvY3QT1AkyCpUjXWVZJmAEzkdBQkQkxI/D5ySE3ZgCOedi6VPFo8DWllIq0yAAEGM8
        OWhsXS8H4IpwGMy7AUg13AC0XWOOIJYoYElEVwCLPelZszu4C6T0LhaVNoQVaXQH+G8FNBe4HsHtAFrV
        61Xg8Q6F+lCR6rEhDyCVepbXGXwKAF4ONwAOASiYbPKeuUr21AG5S0Bo88MArSTUVMDcUT6/5WYAqt20
        SOs8CeVua8cyBFD7gEgX8KC1xFwKwFVA1sujWwpAwbRz5xDLAVo/LhtgqgJXFq1Z1/xLthfcpcAX7mY4
        B+ZYu7wAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADoAgAAJgAAACAgAAABAAgAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFJSUgAAsDYAgICAAM/PzwD///8AgIAAAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AADAwMAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAMzMzMzMzAAAAAAAAAAAABFVVVVVVVTAAAAAAAAAAAARVVVVVVVUwAAAAAAAA
        AAAEVVVVVVVVMAAAAAAAAAAABFVVIlVVVTAAAAAAAAAAAARVVSIlVVUwAAAAAAAAAAAEVVIlIlVVMAAA
        AAAAAzMzNFVSJSJVVTAAAAAAAEVVVVRVIlVSJVUwAAAAAABFFVFUVSJVVSJVMAAAAAAARRVRVFIlVVUi
        VTAAAAAAAEURUVRSJVVVUiUwAAAAAABFEVFUVVVVVVIlMAAAAAAARVVVVFVVVVVVVTAAAAAAAEVVVVRV
        VVVVVVUwAAAAAABFFVFUVVVVVVVVMAAAAAAARRFRVFVVVVVVVTAAAAAAAEUVUVRVVVVVVVUwAAAAAABF
        EVFUVVVVVVVVMAAAAAAARVVVVURERERERAAAAAAAAEVVVVVVVVMAAAAAAAAAAABFFRFRVRVTAAAAAAAA
        AAAARRUVURUVUwAAAAAAAAAAAEUVFVUVFVMAAAAAAAAAAABFFRFRFRFTAAAAAAAAUAAARVVVVVVVUwAA
        AAAAAAAAAAREREREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////
        /////////8AD//+AAf//gAH//4AB//+AAf//gAH//4AB/+AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AA
        Af/AAAH/wAAB/8AAAf/AAAH/wAAB/8AAA//AAP//wAD//8AA///AAP//wAD/98AA///gAf//////////
        //8oAAAAIAAAAEAAAAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAz8/PAAAILwAADlAAABRwAAAa
        kAAAILAAACbPAAAs8AARPf8AMVf/AFFx/wBxi/8AkaX/ALG//wDR2v8AAAAAAICAgAAAGi8AAC1QAAA/
        cAAAUZAAAGOwAAB2zwAAiPAAEZj/ADGm/wBRs/8AccH/AJHP/wCx3f8A0ev/AFJSUgAAAAAAACwvAABL
        UAAAaHAAAIaQAAClsAAAw88AAOHwABHv/wAx8f8AUfP/AHH1/wCR9/8Asfn/ANH7/wD///8AAAAAAAAv
        IQAAUDcAAHBMAACQYwAAsHkAAM+PAADwpgAR/7QAMf++AFH/yABx/9MAkf/cALH/5QDR//AA////AAAA
        AAAALw4AAFAYAABwIgAAkCwAALA2AADPQAAA8EoAEf9bADH/cQBR/4cAcf+dAJH/sgCx/8kA0f/fAP//
        /wAAAAAAAi8AAARQAAAGcAAACJAAAAqwAAALzwAADvAAACD/EgA9/zEAW/9RAHn/cQCY/5EAtf+xANT/
        0QD///8AAAAAABQvAAAiUAAAMHAAAD2QAABMsAAAWc8AAGfwAAB4/xEAiv8xAJz/UQCu/3EAwP+RANL/
        sQDk/9EA////AAAAAAAmLwAAQFAAAFpwAAB0kAAAjrAAAKnPAADC8AAA0f8RANj/MQDe/1EA4/9xAOn/
        kQDv/7EA9v/RAP///wAAAAAALyYAAFBBAABwWwAAkHQAALCOAADPqQAA8MMAAP/SEQD/2DEA/91RAP/k
        cQD/6pEA//CxAP/20QD///8AAAAAAC8UAABQIgAAcDAAAJA+AACwTQAAz1sAAPBpAAD/eREA/4oxAP+d
        UQD/r3EA/8GRAP/SsQD/5dEA////AAAAAAAvAwAAUAQAAHAGAACQCQAAsAoAAM8MAADwDgAA/yASAP8+
        MQD/XFEA/3pxAP+XkQD/trEA/9TRAP///wAAAAAALwAOAFAAFwBwACEAkAArALAANgDPAEAA8ABJAP8R
        WgD/MXAA/1GGAP9xnAD/kbIA/7HIAP/R3wD///8AAAAAAC8AIABQADYAcABMAJAAYgCwAHgAzwCOAPAA
        pAD/EbMA/zG+AP9RxwD/cdEA/5HcAP+x5QD/0fAA////AAAAAAAsAC8ASwBQAGkAcACHAJAApQCwAMQA
        zwDhAPAA8BH/APIx/wD0Uf8A9nH/APeR/wD5sf8A+9H/AP///wAAAAAAGwAvAC0AUAA/AHAAUgCQAGMA
        sAB2AM8AiADwAJkR/wCmMf8AtFH/AMJx/wDPkf8A3LH/AOvR/wD///8AAAAAAAgALwAOAFAAFQBwABsA
        kAAhALAAJgDPACwA8AA+Ef8AWDH/AHFR/wCMcf8AppH/AL+x/wCHgp4A////AA8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8QEBAQEBAQEBAQEBAPDw8PDw8PDw8PDw8PDw8P
        Dw8PAC8vLy8vLy8vLy8vLxAPDw8PDw8PDw8PDw8PDw8PDw8ALy8vLy8vLy8vLy8vEA8PDw8PDw8PDw8P
        Dw8PDw8PDwAvLy8vLy8vLy8vLy8QDw8PDw8PDw8PDw8PDw8PDw8PAC8vLy9FRS8vLy8vLxAPDw8PDw8P
        Dw8PDw8PDw8PDw8ALy8vL0VFRS8vLy8vEA8PDw8PDw8PDw8PDw8PDw8PDwAvLy9FRS9FRS8vLy8QDw8P
        Dw8PDw8PDw8PEBAQEBAQAC8vL0VFL0VFLy8vLxAPDw8PDw8PDw8PDwAvLy8vLy8ALy9FRS8vL0VFLy8v
        EA8PDw8PDw8PDw8PAC8fLy8fLwAvL0VFLy8vL0VFLy8QDw8PDw8PDw8PDw8ALx8vLx8vAC9FRS8vLy8v
        RUUvLxAPDw8PDw8PDw8PDwAvHx8vHy8AL0VFLy8vLy8vRUUvEA8PDw8PDw8PDw8PAC8fHy8fLwAvLy8v
        Ly8vLy9FRS8QDw8PDw8PDw8PDw8ALy8vLy8vAC8vLy8vLy8vLy8vLxAPDw8PDw8PDw8PDwAvLy8vLy8A
        Ly8vLy8vLy8vLy8vEA8PDw8PDw8PDw8PAC8fLy8fLwAvLy8vLy8vLy8vLy8QDw8PDw8PDw8PDw8ALx8f
        Lx8vAC8vLy8vLy8vLy8vLxAPDw8PDw8PDw8PDwAvHy8vHy8ALy8vLy8vLy8vLy8vEA8PDw8PDw8PDw8P
        AC8fHy8fLwAvLy8vLy8vLy8vLy8QDw8PDw8PDw8PDw8ALy8vLy8vLwAAAAAAAAAAAAAAAA8PDw8PDw8P
        Dw8PDwAvLy8vLy8vLy8vLy8QDw8PDw8PDw8PDw8PDw8PDw8PAC8fLx8fLx8vLx8vLxAPDw8PDw8PDw8P
        Dw8PDw8PDw8ALx8vHy8vHx8vHy8vEA8PDw8PDw8PDw8PDw8PDw8PDwAvHy8fLy8vHy8fLy8QDw8PDw8P
        Dw8PDw8PDw8PDw8PAC8fLx8fLx8fLx8fLxAPDw8PDw8PDw8PDw8vDw8PDw8ALy8vLy8vLy8vLy8vEA8P
        Dw8PDw8PDw8PDw8PDw8PDw8AAAAAAAAAAAAAAAAPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw//////////////
        ////wAP//4AB//+AAf//gAH//4AB//+AAf//gAH/4AAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AA
        Af/AAAH/wAAB/8AAAf/AAAH/wAAD/8AA///AAP//wAD//8AA///AAP/3wAD//+AB/////////////w==
</value>
  </data>
</root>